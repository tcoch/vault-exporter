from dotenv import load_dotenv
from selenium import webdriver
from selenium.webdriver.chrome.options import Options as ChromeOptions
from selenium.webdriver.common.by import By
import time
import os



if __name__ == '__main__':
    
    # Create folder to store screenshots
    if not (os.path.isdir("/app/screenshot")):
        os.mkdir("/app/screenshot")

    try:
        # Load env variables from .env file
        load_dotenv()
        
        # Create driver
        chrome_options = ChromeOptions()
        prefs = {
            # File will be downloaded inside selenium container !
            # Folder : /home/seluser/Downloads
            # Name is autogenerated
            "download.prompt_for_download": False,
            "download.directory_upgrade": True,
            "safeBrowse.enabled": True,
            "profile.default_content_settings.popups": 0,
            "profile.content_settings.exceptions.automatic_downloads.*.setting": 1,
        }
        chrome_options.add_experimental_option("prefs", prefs)
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        driver = webdriver.Remote("http://selenium:4444/wd/hub", options=chrome_options)
        driver.maximize_window()
        
        # Access base URL
        driver.get(os.getenv("VW_URL"))
        time.sleep(2)
        driver.save_screenshot('/app/screenshot/0-homepage.png')

        # Connection
        # Set user
        input_login = driver.find_element(By.CSS_SELECTOR, "input[type=email]")
        input_login.send_keys(os.getenv("VW_USER"))
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[buttontype=primary]")
        submit_button.click()
        time.sleep(1)
        driver.save_screenshot('/app/screenshot/1-login_set.png')
        # Set password
        input_password = driver.find_element(By.CSS_SELECTOR, "input[type=password]")
        input_password.send_keys(os.getenv("VW_PWD"))
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type=submit]")
        submit_button.click()
        time.sleep(2)
        driver.save_screenshot('/app/screenshot/2-connected.png')
        
        # Access tools
        tools_link = driver.find_element(By.CSS_SELECTOR, "a[aria-label=Tools]")
        tools_link.click()
        time.sleep(0.5)
        driver.save_screenshot('/app/screenshot/3-tools_expanded.png')
        export_link = driver.find_element(By.CSS_SELECTOR, "a[aria-label='Export vault']")
        export_link.click()
        time.sleep(1)
        driver.save_screenshot('/app/screenshot/4-exporting.png')
        
        # Export vault
        button_export = driver.find_element(By.CSS_SELECTOR, "button[form='export_form_exportForm']")
        button_export.click()
        time.sleep(2)
        driver.save_screenshot('/app/screenshot/5-format_confirmed.png')
        input_password = driver.find_element(By.CSS_SELECTOR, "input[id=masterPassword]")
        input_password.send_keys(os.getenv("VW_PWD"))
        driver.save_screenshot('/app/screenshot/6-password_set.png')
        button_download = driver.find_element(By.CSS_SELECTOR, "footer button[type=submit]")
        button_download.click()
        time.sleep(2)
        driver.save_screenshot('/app/screenshot/7-download.png')
        
    except Exception as err:
        print(Exception, err)
        
    finally:
        driver.quit()
